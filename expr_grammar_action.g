tokens SYM_EOF SYM_IDENTIFIER<string> SYM_INTEGER<int> SYM_PLUS SYM_MINUS SYM_ASTERISK SYM_DIV SYM_MOD
tokens SYM_LPARENTHESIS SYM_RPARENTHESIS SYM_LBRACE SYM_RBRACE
tokens SYM_ASSIGN SYM_SEMICOLON SYM_RETURN SYM_IF SYM_WHILE SYM_ELSE SYM_COMMA SYM_PRINT
tokens SYM_EQUALITY SYM_NOTEQ SYM_LT SYM_LEQ SYM_GT SYM_GEQ
non-terminals S INSTR<tree> INSTRS<tree list> LINSTRS ELSE EXPR FACTOR
non-terminals LPARAMS REST_PARAMS PARAMS_LIST
non-terminals IDENTIFIER INTEGER
non-terminals FUNDEF FUNDEFS
non-terminals ADD_EXPRS ADD_EXPR
non-terminals MUL_EXPRS MUL_EXPR
non-terminals CMP_EXPRS CMP_EXPR
non-terminals EQ_EXPRS EQ_EXPR
axiom S
{

  open Symbols
  open Ast
  open BatPrintf
  open BatBuffer
  open Batteries
  open Utils

  (* TODO *)
  let resolve_associativity term other =
       (* TODO *)
    term


}

rules
S -> FUNDEFS SYM_EOF {  Node (Tlistglobdef, []) }

IDENTIFIER -> SYM_IDENTIFIER
INTEGER -> SYM_INTEGER

FUNDEFS ->
FUNDEFS -> FUNDEF FUNDEFS

FUNDEF -> IDENTIFIER SYM_LPARENTHESIS PARAMS_LIST SYM_RPARENTHESIS SYM_LBRACE INSTRS SYM_RBRACE

PARAMS_LIST ->
PARAMS_LIST -> LPARAMS REST_PARAMS

REST_PARAMS ->
REST_PARAMS -> SYM_COMMA LPARAMS REST_PARAMS

LPARAMS -> IDENTIFIER

ELSE ->
ELSE -> SYM_ELSE SYM_LBRACE INSTRS SYM_RBRACE

LINSTRS ->
LINSTRS -> INSTR LINSTRS

INSTRS -> 
INSTRS -> INSTR LINSTRS

INSTR -> SYM_LBRACE INSTRS SYM_RBRACE
INSTR -> SYM_IF SYM_LPARENTHESIS EXPR SYM_RPARENTHESIS SYM_LBRACE INSTRS SYM_RBRACE ELSE
INSTR -> SYM_WHILE SYM_LPARENTHESIS EXPR SYM_RPARENTHESIS INSTR
INSTR -> SYM_RETURN EXPR SYM_SEMICOLON
INSTR -> SYM_PRINT EXPR SYM_SEMICOLON
INSTR -> IDENTIFIER SYM_ASSIGN EXPR SYM_SEMICOLON

EXPR -> EQ_EXPR EQ_EXPRS

EQ_EXPRS -> 
EQ_EXPRS -> SYM_EQUALITY EQ_EXPR EQ_EXPRS
EQ_EXPRS -> SYM_NOTEQ EQ_EXPR EQ_EXPRS

EQ_EXPR -> CMP_EXPR CMP_EXPRS

CMP_EXPRS ->
CMP_EXPRS -> SYM_GEQ CMP_EXPR CMP_EXPRS
CMP_EXPRS -> SYM_GT CMP_EXPR CMP_EXPRS
CMP_EXPRS -> SYM_LEQ CMP_EXPR CMP_EXPRS
CMP_EXPRS -> SYM_LT CMP_EXPR CMP_EXPRS

CMP_EXPR -> ADD_EXPR ADD_EXPRS

ADD_EXPRS ->
ADD_EXPRS -> SYM_PLUS ADD_EXPR ADD_EXPRS
ADD_EXPRS -> SYM_MINUS ADD_EXPR ADD_EXPRS

ADD_EXPR -> MUL_EXPR MUL_EXPRS

MUL_EXPRS ->
MUL_EXPRS -> SYM_ASTERISK MUL_EXPR MUL_EXPRS
MUL_EXPRS -> SYM_DIV MUL_EXPR MUL_EXPRS
MUL_EXPRS -> SYM_MOD MUL_EXPR MUL_EXPRS

MUL_EXPR -> INTEGER
MUL_EXPR -> IDENTIFIER
MUL_EXPR -> SYM_LPARENTHESIS EXPR SYM_RPARENTHESIS
